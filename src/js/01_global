'use strict';

//Declaración de variables globales////////////////

const input = document.querySelector('.js_input');
const butonSearch = document.querySelector('.js_button');
const resultsContainer = document.querySelector('.js_results');

const imageDefautl =
  'https://via.placeholder.com/210x295/ffffff/666666/?text=TV';

let globalData = [];
let favorites = [];

//FETCH  con llamada a pintar los li////////////////

function handleSearch(event) {
  event.preventDefault();
  let inputValue = input.value.toLowerCase();

  fetch(`//api.tvmaze.com/search/shows?q=${inputValue}`)
    .then((response) => response.json())
    .then((data) => {
      globalData = data;
      paintInput();
    });
  console.log(inputValue);
}

// PINTAR

// PINTAR si son favoritos //////////////////////

function paintInput() {
  resultsContainer.innerHTML = '';

  // si la serie no tiene imagen
  for (const data of globalData) {
    if (data.show.image === null) {
      resultsContainer.innerHTML += ` <li class = "results__list js_list" id = "${data.show.id}"><img src="${imageDefautl} "alt=""/><h2 class = "results__name">${data.show.name}</h2></li>`;
    } else {
      resultsContainer.innerHTML += ` <li class = "results__list js_list " id = "${data.show.id}"><img src="${data.show.image.medium} "alt=""/><h2 class = "results__name">${data.show.name}</h2></li>`;
    }
  }
  listenListResults();
}

// Añadir clase a elemento del listado de resultados que se seleccione

function handleListResults(event) {
  const selectedShow = parseInt(event.currentTarget.id);
  const clickedShow = globalData.find((data) => {
    return data.show.id === selectedShow;
  });

  // si devuelve -1 no esta selecionado, si no devuelve la posición

  const favoritesCheck = favorites.findIndex((favorite) => {
    return favorite.show.id === selectedShow;
  });
  if (favoritesCheck === -1) {
    favorites.push(clickedShow);
  } else {
    favorites.splice(favoritesCheck, 1);
  }
  console.log(favoritesCheck);
  console.log(clickedShow);
  event.currentTarget.classList.toggle('selected');
}

// Recoger todos los li de los resultados con evento sobre li que se pulse

function listenListResults() {
  const listResults = document.querySelectorAll('.js_list');
  for (const resultEl of listResults) {
    resultEl.addEventListener('click', handleListResults);
  }
}

// Evento búsqueda de series ////////////////

butonSearch.addEventListener('click', handleSearch);

// SERIES FAVORITAS ////

function handleClickFav(event) {
  debugger;
  //identificar serie pulsada por el ID
  const favItem = parseInt(event.currentTarget.id);
  console.log(favItem);

  //buscamos por ID
  const getInfo = globalData.find((data) => data.show.id === favItem);

  //buscar si ya está en favoritos

  const alreadyFav = favoritesList.findIndex((favorite) => {
    return favorite.show.id === favItem;
  });

  if (alreadyFav === -1) {
    favoritesList.push(getInfo);
  } else {
    favoritesList = favorites.splice(alreadyFav, 1);
  }
  paintFavorites();
}

const favoritesSelection = document.querySelector('.js_favorites');
let favoritesList = [];

function paintFavorites() {
  let html2 = '';
  for (const fav of favorites) {
    if (fav.show.image === null) {
      html2 += ` <li id="${fav.show.id}" class="results__fav js_fav">
      <img class="resultsfav__img js_favimage" src="${imageDefautl}" />
      <h2 class="resultsfav__name js_favname ${fav.show.name}"></h2>
  </li>`;
    } else {
      html2 += ` <li id="${fav.show.id}" class="results__fav js_fav">
      <img class="resultsfav__img js_favimage" src="${fav.show.image.medium}" />
      <h2 class="resultsfav__name js_favname ${fav.show.name}"></h2>
  </li>`;
    }
  }
  favoritesSelection.innerHTML = html2;
  listenToSelectedResults();
}

function listenToSelectedResults() {
  const allResults = document.querySelectorAll('.js_list');
  for (const result of allResults) {
    result.addEventListener('click', handleClickFav);
  }
}
